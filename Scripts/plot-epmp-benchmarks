#!/usr/bin/env python3

import argparse
import pathlib
import matplotlib.pyplot as plt
import numpy as np

from scipy.interpolate import griddata
from typing import Iterable

def parse_results(raw: str) -> Iterable[float]:
    for line in raw.splitlines():
        if line.strip():
            raw_pattern_len, raw_text_len, raw_time = line.split(';')
            yield (int(raw_pattern_len), int(raw_text_len), float(raw_time))

def main():
    parser = argparse.ArgumentParser(description='Plots EPMP benchmark results')
    parser.add_argument('--dir-path', default='./Output/EPMP', help='The path to the generated EPMP benchmark results')

    args = parser.parse_args()

    for path in pathlib.Path(args.dir_path).iterdir():
        with open(path, 'r') as f:
            x, y, z = zip(*list(parse_results(f.read())))
            grid_x, grid_y = np.mgrid[min(x):max(x):100j, min(y):max(y):100j]
            grid_z = griddata((x, y), z, (grid_x, grid_y), method='cubic')
            plt.title(path.name.split('.')[0])
            plt.xlabel('Pattern length')
            plt.ylabel('Text length')
            plt.contourf(grid_x, grid_y, grid_z)
            plt.show()
    
if __name__ == '__main__':
    main()
