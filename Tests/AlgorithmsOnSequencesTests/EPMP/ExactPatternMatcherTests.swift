import XCTest
@testable import AlgorithmsOnSequences

final class ExactPatternMatcherTests: XCTestCase {
    func testNaivePatternMatcher() {
        testExactPatternMatcher(NaivePatternMatcher.self)
    }

    func testZBoxPatternMatcher() {
        XCTAssertEqual(ZBoxUtils.findLongestCommonPrefixes(in: Array("ananas")), [6, 0, 3, 0, 1, 0])
        testExactPatternMatcher(ZBoxPatternMatcher.self)
    }

    private func testExactPatternMatcher<M>(_ type: M.Type)
        where M: ExactPatternMatcher,
              M.Element == Character {
        assertThat(type, finds: "abc", in: "abcabc", at: [0, 3])
        assertThat(type, finds: "aa", in: "aaaaa", at: [0, 1, 2, 3])
        assertThat(type, finds: "def", in: "feddEf", at: [])
        assertThat(type, finds: "", in: "test", at: [0, 1, 2, 3])
        assertThat(type, finds: "ba", in: "abba", at: [2])
        assertThat(type, finds: "ba", in: "abbaabba", at: [2, 6])

        // Automatically generated test cases (using Scripts/generate-epmp-testcases)

        assertThat(type, finds: "bba", in: "aba", at: [])
        assertThat(type, finds: "aba", in: "aaaaabab", at: [4])
        assertThat(type, finds: "bb", in: "b", at: [])
        assertThat(type, finds: "baaa", in: "bbaaaaba", at: [1])
        assertThat(type, finds: "abaa", in: "baababbbaabbba", at: [])
        assertThat(type, finds: "abaa", in: "aaabbbbaabab", at: [])
        assertThat(type, finds: "aaab", in: "aabbabbaaababbbbbb", at: [7])
        assertThat(type, finds: "a", in: "ababaabbb", at: [0, 2, 4, 5])
        assertThat(type, finds: "baa", in: "aabbbabababaabbabb", at: [10])
        assertThat(type, finds: "ba", in: "abba", at: [2])
        assertThat(type, finds: "bbab", in: "abbbababbbaaa", at: [2])
        assertThat(type, finds: "b", in: "babbbbaababbbb", at: [0, 2, 3, 4, 5, 8, 10, 11, 12, 13])
        assertThat(type, finds: "abba", in: "abbaabbaaaaaaa", at: [0, 4])
        assertThat(type, finds: "aba", in: "baaaabbabaaaabbab", at: [7])
        assertThat(type, finds: "b", in: "bbabababbabbb", at: [0, 1, 3, 5, 7, 8, 10, 11, 12])
        assertThat(type, finds: "a", in: "bbaaabaaabb", at: [2, 3, 4, 6, 7, 8])
        assertThat(type, finds: "ab", in: "bbbbbabbaababababaa", at: [5, 9, 11, 13, 15])
        assertThat(type, finds: "baa", in: "aaaaaaaaabaaaaabaaba", at: [9, 15])
        assertThat(type, finds: "abaa", in: "bbabbbbabbaa", at: [])
        assertThat(type, finds: "abbb", in: "aba", at: [])
        assertThat(type, finds: "ba", in: "abbbbba", at: [5])
        assertThat(type, finds: "bbb", in: "aabbaaaababaab", at: [])
        assertThat(type, finds: "aba", in: "ab", at: [])
        assertThat(type, finds: "a", in: "bba", at: [2])
        assertThat(type, finds: "bba", in: "aaababbbabbbbaa", at: [6, 11])
        assertThat(type, finds: "aabb", in: "bbb", at: [])
        assertThat(type, finds: "aba", in: "abbaaabbba", at: [])
        assertThat(type, finds: "abba", in: "ababaaabab", at: [])
        assertThat(type, finds: "abba", in: "bbabbaabbbbabbaaaba", at: [2, 11])
        assertThat(type, finds: "bb", in: "bababab", at: [])
        assertThat(type, finds: "aa", in: "baba", at: [])
        assertThat(type, finds: "aaab", in: "bbaa", at: [])
        assertThat(type, finds: "aaa", in: "ba", at: [])
        assertThat(type, finds: "aaa", in: "ab", at: [])
        assertThat(type, finds: "aa", in: "ababbaaabbabaabbbbaa", at: [5, 6, 12, 18])
        assertThat(type, finds: "b", in: "aaabbbaba", at: [3, 4, 5, 7])
        assertThat(type, finds: "ba", in: "baabababbbbaab", at: [0, 3, 5, 10])
        assertThat(type, finds: "b", in: "bababb", at: [0, 2, 4, 5])
        assertThat(type, finds: "a", in: "aaabbaaa", at: [0, 1, 2, 5, 6, 7])
        assertThat(type, finds: "a", in: "aabababbbbabaaa", at: [0, 1, 3, 5, 10, 12, 13, 14])
        assertThat(type, finds: "abb", in: "bbb", at: [])
        assertThat(type, finds: "ab", in: "abaaaaa", at: [0])
        assertThat(type, finds: "a", in: "aabbaaaaaaaa", at: [0, 1, 4, 5, 6, 7, 8, 9, 10, 11])
        assertThat(type, finds: "a", in: "aabbba", at: [0, 1, 5])
        assertThat(type, finds: "a", in: "abbaaba", at: [0, 3, 4, 6])
        assertThat(type, finds: "bbbb", in: "bbbaabbbbbbbbaaaaa", at: [5, 6, 7, 8, 9])
        assertThat(type, finds: "abaa", in: "aabba", at: [])
        assertThat(type, finds: "a", in: "bbabb", at: [2])
        assertThat(type, finds: "bab", in: "baababaaababab", at: [3, 9, 11])
        assertThat(type, finds: "b", in: "abbaabbab", at: [1, 2, 5, 6, 8])
        assertThat(type, finds: "aaba", in: "abbabbbabbaaabbb", at: [])
        assertThat(type, finds: "ba", in: "abbbbabbabbaabb", at: [4, 7, 10])
        assertThat(type, finds: "b", in: "bbab", at: [0, 1, 3])
        assertThat(type, finds: "ba", in: "bbbabbbbaabab", at: [2, 7, 10])
        assertThat(type, finds: "ab", in: "abababbbb", at: [0, 2, 4])
        assertThat(type, finds: "aaaa", in: "ababbbaababa", at: [])
        assertThat(type, finds: "abb", in: "bbaaabbaaabaaaaa", at: [4])
        assertThat(type, finds: "a", in: "aaaaaaaaabaaabaaa", at: [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16])
        assertThat(type, finds: "a", in: "bbbab", at: [3])
        assertThat(type, finds: "a", in: "aaa", at: [0, 1, 2])
        assertThat(type, finds: "abb", in: "aabab", at: [])
        assertThat(type, finds: "bb", in: "abaaaaaaaabaababbbaa", at: [15, 16])
        assertThat(type, finds: "b", in: "bbaabbb", at: [0, 1, 4, 5, 6])
        assertThat(type, finds: "aabb", in: "aabbbabaaabbaa", at: [0, 8])
        assertThat(type, finds: "bbba", in: "baaaabaabaaaababaaab", at: [])
        assertThat(type, finds: "a", in: "baabbaab", at: [1, 2, 5, 6])
        assertThat(type, finds: "aab", in: "bbabbbabab", at: [])
        assertThat(type, finds: "baaa", in: "bbbabbbabbbabbab", at: [])
        assertThat(type, finds: "a", in: "baaaabbbaaa", at: [1, 2, 3, 4, 8, 9, 10])
        assertThat(type, finds: "bab", in: "baaaabbbababa", at: [7, 9])
        assertThat(type, finds: "aa", in: "baa", at: [1])
        assertThat(type, finds: "a", in: "baaaaaabababbbbbbaa", at: [1, 2, 3, 4, 5, 6, 8, 10, 17, 18])
        assertThat(type, finds: "bb", in: "bab", at: [])
        assertThat(type, finds: "aab", in: "abbbbababbaaa", at: [])
        assertThat(type, finds: "babb", in: "baaababbbaabbaa", at: [4])
        assertThat(type, finds: "a", in: "abbbaaaabbaa", at: [0, 4, 5, 6, 7, 10, 11])
        assertThat(type, finds: "bbb", in: "baa", at: [])
        assertThat(type, finds: "baaa", in: "aabbbaaa", at: [4])
        assertThat(type, finds: "baaa", in: "baaabababaaababaa", at: [0, 8])
        assertThat(type, finds: "aa", in: "ababbaaabbb", at: [5, 6])
        assertThat(type, finds: "baa", in: "abbbbabbabaa", at: [9])
        assertThat(type, finds: "abb", in: "bbaababbb", at: [5])
        assertThat(type, finds: "bab", in: "babbbbabaaabaabbaa", at: [0, 5])
        assertThat(type, finds: "ab", in: "abaabbbbab", at: [0, 3, 8])
        assertThat(type, finds: "aabb", in: "aabaaabbaba", at: [4])
        assertThat(type, finds: "a", in: "bbbbbaaaaababbb", at: [5, 6, 7, 8, 9, 11])
        assertThat(type, finds: "ba", in: "abaaaabbbb", at: [1])
        assertThat(type, finds: "bbba", in: "abbbbbaaaababbbaaa", at: [3, 12])
        assertThat(type, finds: "aab", in: "aaabbab", at: [1])
        assertThat(type, finds: "abbb", in: "baaaba", at: [])
        assertThat(type, finds: "b", in: "abb", at: [1, 2])
        assertThat(type, finds: "a", in: "b", at: [])
        assertThat(type, finds: "b", in: "ab", at: [1])
        assertThat(type, finds: "a", in: "baabbaabbbbaaaa", at: [1, 2, 5, 6, 11, 12, 13, 14])
        assertThat(type, finds: "aaa", in: "abaaabaaabbbbbaa", at: [2, 6])
        assertThat(type, finds: "bab", in: "aabaaabaabbbab", at: [11])
        assertThat(type, finds: "bbab", in: "bababaab", at: [])
        assertThat(type, finds: "bbaa", in: "babbababbaabbaaab", at: [7, 11])
        assertThat(type, finds: "bba", in: "bb", at: [])
        assertThat(type, finds: "bb", in: "bbbaabbbbbbaaaab", at: [0, 1, 5, 6, 7, 8, 9])
    }

    private func assertThat<M>(_ type: M.Type, finds pattern: String, in text: String, at indices: [Int], line: UInt = #line)
        where M: ExactPatternMatcher,
              M.Element == Character {
        XCTAssertEqual(M.init(pattern: Array(pattern)).findAllOccurrences(in: Array(text)), indices, line: line)
    }
}
